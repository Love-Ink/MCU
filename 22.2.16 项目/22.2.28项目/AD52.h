#ifndef __AD52_H
#define __AD52_H

#include <reg52.h>

/*=====================================================================================================================*/
/*  SFR_name   |   Address  |   bit  |     B7     |   B6   |   B5   |    B4    |    B3     |   B2   |   B1   |   B0   |*/
/*--------------------------------------------------------------------------------------------------------------------|*/
/*  ADC_CONTR  |     BCH    |  name  |  ADC_POWER | SPEED1 | SPEED0 | ADC_FLAG | ADC_START |  CHS2  |  CHS1  |  CHS0  |*/
/*--------------------------------------------------------------------------------------------------------------------|*/
/*    P1ASF    |     9DH    |  name  |   P17ASF   | P16ASF | P15ASF |  P14ASF  |   P13ASF  | P12ASF | P11ASF | P10ASF |*/
/*--------------------------------------------------------------------------------------------------------------------|*/
/*	  AUSR1    |     A2H    |  name  |     -      | PCA_P4 | SPI_P4 |  S2_P4   |    GF2    | *ADRJ* |    -   |  DPS   |*/
/*--------------------------------------------------------------------------------------------------------------------|*/
/*   ADC_RES   |     BDH    |  name  |            |        |        |          |           |        |        |        |*/
/*--------------------------------------------------------------------------------------------------------------------|*/
/*   ADC_RESL  |     BEH    |  name  |            |        |        |          |           |        |        |        |*/
/*=====================================================================================================================*/

sfr P1ASF = 0x9D;			/* A/D转换通道与P1口(P1^7~P1^0)复用功能开启*//*需要开启哪个引脚就对相应的 P1XASF 置1 */  
											/* 当P1ASF变动时 ADC_CH 也需要变动  */
							/*例：  开启P1^7引脚A/D复用功能   则 1000 0000 ==>  0x80   所以P1ASF = 0x80;*/
							
sfr ADC_CONTR  = 0xBC;		/*配置ADC电源、转换速度、ADC使能、以及模拟通道选择*/
sfr ADC_RES = 0xBD;			/*A/D转换结果寄存器  高  8位*/
sfr ADC_RESL = 0xBE;		/*A/D转换结果寄存器  低  8位*/
sfr AUXR1 = 0xA2;		

/*AUXR1 寄存器中ADRJ位是A/D转换结果寄存器的数据格式调整控制位

	* 当 ADRJ = 0 时      10位A/D转换结果的高8位存放在ADC_RES中，低2位存放在ADC_RESL的低2位中
	* 当 ADRJ = 1 时      10位A/D转换结果的高2位存放在ADC_RES中，低8位存放在ADC_RESL的低2位中

*/
	
sbit EADC = IE^5;


#define ADC_POWER 	0x80
#define ADC_FLAG 	0x10
#define ADC_START 	0x08
#define ADC_SPEEDLL 0x00
#define ADC_SPEEDL  0x20
#define ADC_SPEEDH 	0x40
#define ADC_SPEEDHH 0x60
#define ADC_CH 		0x00

void AD_Init();

#endif